/*/
File: server.cfg
Author:

	Quiksilver
	
Last Modified:

	14/12/2017 A3 1.80 by Quiksilver
	
Description:

	http://community.bistudio.com/wiki/server.cfg
	
Instructions:

	0. set hostname, under GENERAL SETTINGS
	1. set password, under GENERAL SETTINGS
	2. set passwordAdmin, under GENERAL SETTINGS
	3. set maxPlayers, under GENERAL SETTINGS
	4. set steamPort + steamQueryPort if necessary
	5. set Mission Template, under MISSION WHITELIST
	6. set missionWhitelist[], make sure correct pbo is added with given format
	7. set forcedDifficulty = "Custom";
	8. set serverCommandPassword under SECURITY. Note, this must match up with serverCommandPassword function in mod file.
	
____________________________________________________________/*/

//======================================================= GENERAL SETTINGS

hostname = "my server";    				// Name of the server displayed in the public server list
password = "password";     													// Password required to join the server
passwordAdmin = "adminpassword";      									// Password to login as admin. Open the chat and type: #login password
maxPlayers = 64;    												// Maximum amount of players, including headless clients. Anybody who joins the server is considered a player, regardless of their role or team.
persistent = 1;     												// If set to 1, missions will continue to run after all players have disconnected; required if you want to use the -autoInit startup parameter
forceRotorLibSimulation = 0;										// Enforces the Advanced Flight Model on the server. Default = 0 (up to the player). 1 - forced AFM, 2 - forced SFM.
allowedFilePatching = 1;											// Prevent or allow file patching for the clients (including the HC) (since Arma 3 1.49+). 0 = no clients, 1 = headless client only, 2 = all clients.
statisticsEnabled = 0;                                                                                // BIS Analytics                                                                               // Lobby AFK timeout
kickClientsOnSlowNetwork = 0;
disconnectTimeout = 90;                                                                                // Lobby AFK timeout
maxPing = 350;

//======================================================= VOICE CHAT

disableVoN = 0;     												// If set to 1, voice chat will be disabled
disableChannels[]={{0,TRUE,TRUE},{1,TRUE,TRUE},{2,FALSE,FALSE},{3,FALSE,FALSE},{4,FALSE,FALSE},{5,FALSE,FALSE}};
vonCodecQuality = 10;    											// Supports range 1-30; 1-10 is 8kHz (narrowband), 11-20 is 16kHz (wideband), 21-30 is 32kHz (ultrawideband); higher = better sound quality, more bandwidth consumption
vonCodec = 1;                                                                                                  // Experimental Opus VON codec

//======================================================= VOTING

voteMissionPlayers = 1;       										// Minimum number of players required before displaying the mission selection screen, if you have not already selected a mission in this config
voteThreshold = 9999;    											// Percentage (0.00 to 1.00) of players needed to vote something into effect, for example an admin or a new mission. Set to 9999 to prevent random players being voted as admins.
allowedVoteCmds[] = {};
allowedVotedAdminCmds[] = {};

//======================================================= STEAM PORTS

steamPort = 2313;     												// default 8766, needs to be unique if multiple serves on same box
steamQueryPort = 2314;    											// default 27016, needs to be unique if multiple servers on same box

//======================================================= HEADLESS CLIENT

headlessClients[] = {"127.0.0.1"};				        // Valid Headless Client IPs
localClient[] = {"127.0.0.1"};											// Client IPs to assign unlimited bandwidth

//======================================================= WELCOME MESSAGE ("message of the day")

motd[] = {};
motdInterval = 20;    											// Number of seconds between each message

//======================================================= MISSION WHITELIST

class Missions {
	class Annex {
		//template="Apex_framework_beta_102.Altis";
		template="Apex_framework_beta_102.Tanoa";
		//template="Apex_framework_beta_102.Malden";
		difficulty="Custom";
	};
};
missionWhitelist[] = {"Apex_framework_beta_102.Altis","Apex_framework_beta_102.Tanoa","Apex_framework_beta_102.Malden"};
forcedDifficulty = "Custom";

//======================================================= LOGGING

timeStampFormat = "short";                						 // Timestamp format used in the server RPT logs. Possible values are "none" (default), "short", "full"
logFile = "server_console.log";   								 // Server console output filename

//======================================================= SECURITY

BattlEye = 1;    												// If set to 1, BattlEye Anti-Cheat will be enabled on the server (default: 1, recommended: 1)
verifySignatures = 2;    										// If set to 2, players with unknown or unsigned mods won't be allowed join (default: 0, recommended: 2)
kickDuplicate = 1;    											// If set to 1, players with an ID that is identical to another player will be kicked (recommended: 1)
regularCheck = "";
battleyeLicense = 1;
serverCommandPassword = "ShVQArtpGdc5aDQq";							// Password required by server to execute commands
allowedLoadFileExtensions[] = {"wav"};							// only allow files with those extensions to be loaded via loadFile command (since Arma 3 v1.19.124216) 
allowedPreprocessFileExtensions[] = {"sqf"};					// only allow files with those extensions to be loaded via preprocessFile/preprocessFileLineNumber commands (since Arma 3 v1.19.124323)
allowedHTMLLoadExtensions[] = {};								// only allow files with those extensions to be loaded via HTMLLoad command (since Arma 3 v1.27.126715)
allowedHTMLLoadURIs[] = {};										// Uncomment to define server-level restrictions for URIs

//======================================================= EVENT SCRIPTS (see http://community.bistudio.com/wiki/ArmA:_Server_Side_Scripting)

onUserConnected = "";    										// command to run when a player connects
onUserDisconnected = "";   										// command to run when a player disconnects
doubleIdDetected = "";    										// command to run if a player has the same ID as another player in the server
onUnsignedData = "kick (_this select 0)";    					// command to run if a player has unsigned files
onHackedData = "kick (_this select 0)";    						// command to run if a player has tampered files
onDifferentData = "kick (_this select 0)";											// data with a valid signature, but different version than the one present on server detected
